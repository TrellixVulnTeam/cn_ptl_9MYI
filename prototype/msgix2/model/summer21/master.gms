$TITLE The MESSAGEix Integrated Assessment Model
$ONDOLLAR
$ONTEXT

   Copyright 2017â€“2021 IIASA Energy, Climate, and Environment (ECE) Program

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

This is the GAMS implementation of the integrated assessment and system optimization model MESSAGEix
For the most recent version of the framework, please visit `github.com/iiasa/message_ix`.
For a comprehensive documentation of the latest release of the MESSAGEix framework
and the ix modeling platform, please visit `MESSAGEix.iiasa.ac.at/`.

When using the MESSAGEix framework, please cite as:

   Daniel Huppmann, Matthew Gidden, Oliver Fricko, Peter Kolp, Clara Orthofer,
   Michael Pimmer, Nikolay Kushin, Adriano Vinca, Alessio Mastrucci,
   Keywan Riahi, and Volker Krey.
   "The |MESSAGEix| Integrated Assessment Model and the ix modeling platform".
   Environmental Modelling & Software 112:143-156, 2019.
   doi: 10.1016/j.envsoft.2018.11.012
   electronic pre-print available at pure.iiasa.ac.at/15157/

Please review the NOTICE at `MESSAGEix.iiasa.ac.at/notice.html`
and included in the GitHub repository for further user guidelines.
The community forum and mailing list is hosted at `groups.google.com/d/forum/message_ix`.

$OFFTEXT

***
* Run script for |MESSAGEix| (stand-alone)
* ========================================
*
* This is |MESSAGEix| version |version|. The version number must match the version number
* of the ``ixmp`` ``MESSAGE``-scheme specifications used for exporting data and importing results.
*
* This file contains the workflow of a |MESSAGEix|-standalone run. It can be called:
*
* - Via the scientific programming API's using the packages/libraries ``ixmp`` and ``message_ix``,
*   calling the method ``solve()`` of the ``message_ix.Scenario`` class (see the tutorials).
* - using the file ``MESSAGE_master.gms`` with the option ``$SETGLOBAL macromode "none"``,
*   where the input data file name and other options are stated explicitly, or
* - directly from the command line, with the input data file name
*   and other options specific as command line parameters, e.g.::
*
*   ``gams MESSAGE_run.gms --in="<data-file>" [--out="<output-file>"]``
*
* By default, the data file (in gdx format) should be located in the ``model/data`` folder
* and be named in the format ``MsgData_<name>.gdx``. Upon completion of the GAMS execution,
* a results file ``<output-file>`` will be written
* (or ``model\output\MsgOutput.gdx`` if ``--out`` is not provided).
***

$EOLCOM #

***** 

* define input data gdx file
$ontext
In the generated xxxx files the cmd-line --in= option is used in
MESSAGE/data_load.gms file that loads the model parameters.
This approach cannot be used for the model-specs prepared for MCMA.
Therefore, the below predefined file name and its location is used.
Please make sure that the data input file is renamed to: parameters.gdx
and the file is located in the sub-directory named: data .
$offtext

$setglobal in data/parameters.gdx
;

$ontext
* The model_setup.gms generated through the messge_ix should not
* be modified for MCMA.
* Additional (to those generated by message_ix) declarations and
* definitions of outcome variables should be placed in the model_mca.gms
$offtext

$INCLUDE MESSAGE/model_setup.gms
$INCLUDE model_mca.gms

* Handling of the time periods 
$ontext
In the message_ix generated model handling of time periods is done in
model_solve.gms (prior to the optimization). In MCMA model_solve.gms
is not used. Therefore, the following xxx lines were copied here.
$offtext
* reset year in case it was set by MACRO to include the base year before
* include all model periods in the optimization horizon (excluding
* historical periods prior to 'first_period')
    year(year_all) = no ;
    year(year_all)$( model_horizon(year_all) ) = yes ;

* Skip the model_solve.gms --------------------------------------------
* solve statements (including the loop for myopic or rolling-horizon
* optimization) skipped
*   $INCLUDE MESSAGE/model_solve.gms

* run MCMA, if the --mcma option used in the gams cmd-line 
* the mcma value specifies the file name generated by the MCMA.
* The file contains the MCMA variables and relations, as well as the gams
* "Solve" statement.
$If set mcma $INCLUDE %mcma%
$If set mcma $GOTO post_solve

$ontext
The remaining (up to the post_solve label) statements are used for
testing the generated model by using single-criterion optimization for
each of the defined outcome variable defined to be used as one of the
criteria. The OBJ is the predefined (by message_ix) objective. The
other variables (CO2_CUM, COST_CUM) are defined in the cn_ptl model
prototype. The latter list shall be extended in the forthcoming versions
of the model.
$offtext

Model MC_lp / all / ;
* The following options might be used in future. Currently are not
* generated by the MCMA; therefore, for the compatibility, are commented.
* MC_lp.holdfixed = 1 ;
* MC_lp.optfile = 1 ;
* MC_lp.optcr = 0 ;
* Write a status update to the log file, solve the model.
* Note: the gdx output will be available only for the last optimization.
* Comment/uncomment pairs of the below statements to optimize the desired
* outcome/criterion variable.
* Comment/uncomment the Display statements that store values in master.log

*	put_utility 'log' /'+++ Minimize OBJ variable. +++ ' ;
*	Solve MC_lp using LP minimizing OBJ ;
	put_utility 'log' /'+++ Minimize CO2_CUM variable. +++ ' ;
	Solve MC_lp using LP minimizing CO2_CUM ;
	Display CO2_CUM.l ;
	Display COST_CUM.l ;
	put_utility 'log' /'+++ Minimize COST_CUM variable. +++ ' ;
	Solve MC_lp using LP minimizing COST_CUM ;
	Display CO2_CUM.l ;
	Display COST_CUM.l ;

	put_utility 'log' /'+++ After the Solve +++ ' ;


$LABEL post_solve

***  continue with the message_ix postprocessing
* Note: the part of postprocessing (included in model_solve.gms)
* is currently not included in this version.

*----------------------------------------------------------------*
* post-processing and export to gdx   
*----------------------------------------------------------------*

* include MESSAGE GAMS-internal reporting
$INCLUDE MESSAGE/reporting.gms

* dump all input data, processed data and results to a gdx file
execute_unload "%out%"

put_utility 'log' / /"+++ End of MCMA - MESSAGEix run +++ " ;

*------------------------------------------------------------*
* end of file - have a nice day!                             *
*----------------------------------------------------------- *
